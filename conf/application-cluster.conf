# Configuration file for cluster environment

include "application-prod.conf"

## Cluster workers to be loaded at startup
cluster_workers += akka.cluster.workers.SampleClusterWorker
cluster_workers += akka.cluster.workers.SampleClusterWorker2
cluster_workers += akka.cluster.workers.SampleSingletonClusterWorker

# Custom Akka settings for cluster
cluster_conf {
    akka {
        log-dead-letters = 0
        log-dead-letters-during-shutdown = off
        actor {
            provider = "akka.cluster.ClusterActorRefProvider"
        }
        remote {
            log-remote-lifecycle-events = off
            netty.tcp {
                hostname = "127.0.0.1"
                port     = 9051
            }
        }
        scheduler {
            tick-duration   = 5ms
            ticks-per-wheel = 1024
        }

        cluster {
            # User "roles" to group nodes in a cluster.
            roles      = ["roleA", "roleB"]
            name       = "MyCluster"
            #seed-nodes = [
            #    "akka.tcp://"${cluster_conf.akka.cluster.name}"@127.0.0.1:9051"
            #]

            pub-sub {
                # Actor name of the mediator actor, /system/distributedPubSubMediator
                name = distributedPubSubMediator

                # Start the mediator on members tagged with this role.
                # All members are used if undefined or empty.
                role = ""

                # The routing logic to use for 'Send'
                # Possible values: random, round-robin, broadcast
                routing-logic = random

                # How often the DistributedPubSubMediator should send out gossip information
                gossip-interval = 1s

                # Removed entries are pruned after this duration
                removed-time-to-live = 120s

                # Maximum number of elements to transfer in one message when synchronizing the registries.
                # Next chunk will be transferred in next round of gossip.
                max-delta-elements = 3000

                # The id of the dispatcher to use for DistributedPubSubMediator actors.
                # If not specified default dispatcher is used.
                # If specified you need to define the settings of the actual dispatcher.
                use-dispatcher = ""
            }

            # auto downing is NOT safe for production deployments.
            # you may want to use it during development, read more about it in the docs.
            #auto-down-unreachable-after = 120s

            # Disable legacy metrics in akka-cluster
            metrics.enabled=off

            # Sigar native library extract location during tests.
            # Note: use per-jvm-instance folder when running multiple jvm on one host.
            # metrics.native-library-extract-folder=${user.dir}/target/native
        }

        # Enable metrics extension in akka-cluster-metrics.
        # It is recommended to load the DistributedPubSub extension when the actor system is started.
        # Otherwise it will be activated when first used and then it takes a while for it to be populated.
        extensions=["akka.cluster.metrics.ClusterMetricsExtension", "akka.cluster.pubsub.DistributedPubSub"]    
    }
}

